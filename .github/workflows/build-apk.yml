name: Build APK

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Android components
        shell: bash
        run: |
          sdkmanager --sdk_root="${ANDROID_SDK_ROOT}" "platform-tools" "platforms;android-34" "build-tools;34.0.0"
          yes | sdkmanager --licenses

      - name: Unzip newest project
        id: unzip
        shell: bash
        run: |
          set -e
          ZIP="$(find . -maxdepth 1 -type f -name '*.zip' -printf '%T@ %p\n' | sort -nr | head -n1 | cut -d' ' -f2- || true)"
          if [ -z "$ZIP" ]; then
            echo "::error::No ZIP found in repo root"; exit 1
          fi
          echo "Using ZIP: $ZIP"
          rm -rf ws && mkdir ws
          unzip -q "$ZIP" -d ws
          echo "--- first levels ---"
          find ws -maxdepth 3 -type d -print

          # try to locate gradlew; else detect app/
          PROJ="$(find ws -type f -name gradlew -printf '%h\n' | head -n1 || true)"
          if [ -z "$PROJ" ] && [ -d ws/app ]; then
            PROJ="ws"
            printf "pluginManagement { repositories { google(); mavenCentral(); gradlePluginPortal() } }\n" > ws/settings.gradle
            printf "dependencyResolutionManagement { repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS); repositories { google(); mavenCentral() } }\n" >> ws/settings.gradle
            printf "rootProject.name = \"VampireDiariesEngine\"\ninclude(\":app\")\n" >> ws/settings.gradle
            printf "allprojects { repositories { google(); mavenCentral() } }\n" > ws/build.gradle
            printf "org.gradle.jvmargs=-Xmx2g -Dfile.encoding=UTF-8\nandroid.useAndroidX=true\n" > ws/gradle.properties
          fi
          if [ -z "$PROJ" ]; then
            PROJ="$(find ws -type f -name 'settings.gradle*' -printf '%h\n' | head -n1 || true)"
          fi
          if [ -z "$PROJ" ]; then
            echo "::error::Project dir not found after unzip"; exit 2
          fi
          echo "PROJ=$PROJ" >> $GITHUB_ENV

      - name: Ensure Gradle wrapper
        shell: bash
        run: |
          cd "$PROJ"
          if [ ! -f ./gradlew ]; then
            echo "Creating Gradle wrapperâ€¦"
            curl -sL https://services.gradle.org/distributions/gradle-8.7-bin.zip -o g.zip
            unzip -q g.zip -d "${RUNNER_TEMP}"
            "${RUNNER_TEMP}/gradle-8.7/bin/gradle" wrapper --gradle-version 8.7
          fi
          chmod +x ./gradlew
          ./gradlew --version

      - name: Build debug APK
        shell: bash
        run: |
          cd "$PROJ"
          ./gradlew --no-daemon --stacktrace assembleDebug

      - name: Find APK path
        id: findapk
        shell: bash
        run: |
          APK="$(find "$PROJ" -type f -path '*/build/outputs/apk/*/*.apk' | head -n1 || true)"
          if [ -z "$APK" ]; then
            echo "::error::APK not found under outputs/apk"; exit 3
          fi
          echo "APK=$APK" >> $GITHUB_ENV
          echo "Found: $APK"

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: ${{ env.APK }}
